// Code generated by mockery v2.53.4. DO NOT EDIT.

package mocks

import (
	mock "github.com/stretchr/testify/mock"

	shared_kernel "delivery/internal/core/domain/model/shared_kernel"
)

// GeoClient is an autogenerated mock type for the GeoClient type
type GeoClient struct {
	mock.Mock
}

// GetGeolocation provides a mock function with given fields: street
func (_m *GeoClient) GetGeolocation(street string) (shared_kernel.Location, error) {
	ret := _m.Called(street)

	if len(ret) == 0 {
		panic("no return value specified for GetGeolocation")
	}

	var r0 shared_kernel.Location
	var r1 error
	if rf, ok := ret.Get(0).(func(string) (shared_kernel.Location, error)); ok {
		return rf(street)
	}
	if rf, ok := ret.Get(0).(func(string) shared_kernel.Location); ok {
		r0 = rf(street)
	} else {
		r0 = ret.Get(0).(shared_kernel.Location)
	}

	if rf, ok := ret.Get(1).(func(string) error); ok {
		r1 = rf(street)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// NewGeoClient creates a new instance of GeoClient. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewGeoClient(t interface {
	mock.TestingT
	Cleanup(func())
}) *GeoClient {
	mock := &GeoClient{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
